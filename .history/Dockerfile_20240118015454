# Stage 1: Build vcpkg
FROM --platform=linux/amd64 ubuntu:22.04 AS vcpkg_builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    curl \
    zip \  
    unzip \
    tar \
    make \
    pkg-config

    # Install a newer version of Git
RUN apt-get install -y software-properties-common && \
    add-apt-repository ppa:git-core/ppa -y && \
    apt-get update && \
    apt-get install -y git

WORKDIR /opt
RUN git clone --depth 1 https://github.com/Microsoft/vcpkg.git \
    && ./vcpkg/bootstrap-vcpkg.sh -disableMetrics \
    && ln -s /opt/vcpkg/vcpkg /usr/local/bin/vcpkg \
    && vcpkg install vcpkg-cmake POCO
ENV VCPKG_FORCE_SYSTEM_BINARIES="1"
# Clean up package cache to free space
RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Update vcpkg
RUN cd /opt/vcpkg && git pull && ./bootstrap-vcpkg.sh -disableMetrics

# Stage 2: Build the application
FROM --platform=linux/amd64 ubuntu:22.04 AS builder

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libasound2 \
    libasound2-plugins \
    alsa \
    alsa-utils \
    alsa-oss \
    libdbus-1-3 \
    libgbm1 \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libglib2.0-dev \
    libssl-dev \
    libx11-xcb1 \
    libxcb-image0 \
    libxcb-keysyms1 \
    libxcb-randr0 \
    libxcb-shape0 \
    libxcb-shm0 \
    libxcb-xfixes0 \
    libxcb-xtest0 \
    libxfixes3 \
    pkgconf \
    tar \
    unzip \
    zip

# Copy vcpkg artifacts
COPY --from=vcpkg_builder /opt/vcpkg /opt/vcpkg

# Install Tini
ENV TINI_VERSION v0.19.0
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini
RUN chmod +x /tini

# Copy project source code
WORKDIR /tmp/meeting-sdk-linux-sample
COPY . .

# Configure and build the project with CMake
RUN /opt/vcpkg/vcpkg install --feature-flags=manifests
RUN cmake -DCMAKE_TOOLCHAIN_FILE=/opt/vcpkg/scripts/buildsystems/vcpkg.cmake .
RUN make

# Set the entry point
ENTRYPOINT ["/tini", "--", "./bin/entry.sh"]
